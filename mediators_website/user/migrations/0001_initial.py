# Generated by Django 4.2.4 on 2023-09-30 11:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=150, null=True)),
                ('lastname', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.CharField(max_length=150, unique=True)),
                ('phone', models.CharField(blank=True, max_length=12, null=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('create_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('status', models.TextField(choices=[('New', 'New'), ('Approved', 'Approved'), ('Blocked', 'Blocked'), ('Declined', 'Declined')], default='New', verbose_name='status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmailConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_code', models.CharField(max_length=128, unique=True, verbose_name='Approve code')),
                ('code_expiration_date', models.DateTimeField(verbose_name='code expiration date')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approved?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='email_confirmation', to=settings.AUTH_USER_MODEL, verbose_name='email confirmation')),
            ],
        ),
        migrations.CreateModel(
            name='BasicUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='Mediator',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='AdditionalInfo',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to=settings.AUTH_USER_MODEL)),
                ('mediator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='add_info_for_mediator', serialize=False, to='user.mediator')),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('photo', models.FilePathField(blank=True, null=True, path='mediators_photo/')),
                ('summary', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('user.mediator',),
        ),
    ]
